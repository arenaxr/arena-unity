/**
 * Open source software under the terms in /LICENSE
 * Copyright (c) 2021-2024, Carnegie Mellon University. All rights reserved.
 */

// CAUTION: This file is autogenerated from https://github.com/arenaxr/arena-schemas. Changes made here may be overwritten.

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json.Serialization;
using UnityEngine;

namespace ArenaUnity.Schemas
{
    /// <summary>
    /// Cube (=Box) Geometry (deprecated); Supported for Legacy reasons; Please use Box in new scenes
    /// </summary>
    [Serializable]
    public class ArenaCubeJson
    {
        public readonly string object_type = "cube";

        // cube member-fields

        private static float defDepth = 1f;
        [JsonProperty(PropertyName = "depth")]
        [Obsolete("depth")]
        public float Depth { get; protected set; } = defDepth;
        public bool ShouldSerializeDepth()
        {
            return false; // deprecated in json schema
        }

        private static float defHeight = 1f;
        [JsonProperty(PropertyName = "height")]
        [Obsolete("height")]
        public float Height { get; protected set; } = defHeight;
        public bool ShouldSerializeHeight()
        {
            return false; // deprecated in json schema
        }

        private static int defSegmentsDepth = 1;
        [JsonProperty(PropertyName = "segmentsDepth")]
        [Obsolete("segments depth")]
        public int SegmentsDepth { get; protected set; } = defSegmentsDepth;
        public bool ShouldSerializeSegmentsDepth()
        {
            return false; // deprecated in json schema
        }

        private static int defSegmentsHeight = 1;
        [JsonProperty(PropertyName = "segmentsHeight")]
        [Obsolete("segments height")]
        public int SegmentsHeight { get; protected set; } = defSegmentsHeight;
        public bool ShouldSerializeSegmentsHeight()
        {
            return false; // deprecated in json schema
        }

        private static int defSegmentsWidth = 1;
        [JsonProperty(PropertyName = "segmentsWidth")]
        [Obsolete("segments width")]
        public int SegmentsWidth { get; protected set; } = defSegmentsWidth;
        public bool ShouldSerializeSegmentsWidth()
        {
            return false; // deprecated in json schema
        }

        private static float defWidth = 1f;
        [JsonProperty(PropertyName = "width")]
        [Obsolete("width")]
        public float Width { get; protected set; } = defWidth;
        public bool ShouldSerializeWidth()
        {
            return false; // deprecated in json schema
        }

        // General json object management
        [OnError]
        internal void OnError(StreamingContext context, ErrorContext errorContext)
        {
            Debug.LogWarning($"{errorContext.Error.Message}: {errorContext.OriginalObject}");
            errorContext.Handled = true;
        }

        [JsonExtensionData]
        private IDictionary<string, JToken> _additionalData;
    }
}
