/**
 * Open source software under the terms in /LICENSE
 * Copyright (c) 2021-2024, Carnegie Mellon University. All rights reserved.
 */

// CAUTION: This file is autogenerated from https://github.com/arenaxr/arena-schemas. Changes made here may be overwritten.

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json.Serialization;
using UnityEngine;

namespace ArenaUnity.Schemas
{
    /// <summary>
    /// Load new URL when object is clicked. Requires click-listener.
    /// </summary>
    [Serializable]
    public class ArenaGotoUrlJson
    {
        [JsonIgnore]
        public readonly string componentName = "goto-url";

        // goto-url member-fields

        public enum DestType
        {
            [EnumMember(Value = "popup")]
            Popup,
            [EnumMember(Value = "newtab")]
            Newtab,
            [EnumMember(Value = "sametab")]
            Sametab,
        }
        private static DestType defDest = DestType.Sametab;
        [JsonConverter(typeof(StringEnumConverter))]
        [JsonProperty(PropertyName = "dest")]
        [Tooltip("Where to open the URL.")]
        public DestType Dest = defDest;
        public bool ShouldSerializeDest()
        {
            return true; // required in json schema
        }

        public enum OnType
        {
            [EnumMember(Value = "mousedown")]
            Mousedown,
            [EnumMember(Value = "mouseup")]
            Mouseup,
        }
        private static OnType defOn = OnType.Mousedown;
        [JsonConverter(typeof(StringEnumConverter))]
        [JsonProperty(PropertyName = "on")]
        [Tooltip("A case-sensitive string representing the event type to listen for. See <a href='https://developer.mozilla.org/en-US/docs/Web/Events'>Web Events</a>.")]
        public OnType On = defOn;
        public bool ShouldSerializeOn()
        {
            return true; // required in json schema
        }

        private static string defUrl = "";
        [JsonProperty(PropertyName = "url")]
        [Tooltip("The destination url, e.g. https://example.com.")]
        public string Url = defUrl;
        public bool ShouldSerializeUrl()
        {
            return true; // required in json schema
        }

        // General json object management
        [OnError]
        internal void OnError(StreamingContext context, ErrorContext errorContext)
        {
            Debug.LogWarning($"{errorContext.Error.Message}: {errorContext.OriginalObject}");
            errorContext.Handled = true;
        }

        [JsonExtensionData]
        private IDictionary<string, JToken> _additionalData;
    }
}
