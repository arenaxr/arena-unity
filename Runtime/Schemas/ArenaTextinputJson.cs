/**
 * Open source software under the terms in /LICENSE
 * Copyright (c) 2021-2023, Carnegie Mellon University. All rights reserved.
 */

// CAUTION: This file is autogenerated from https://github.com/arenaxr/arena-schemas. Changes made here may be overwritten.

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json.Serialization;
using UnityEngine;

namespace ArenaUnity.Schemas
{
    /// <summary>
    /// Opens an HTML prompt when clicked. Sends text input as an event on MQTT. Requires click-listener.
    /// </summary>
    [Serializable]
    public class ArenaTextinputJson
    {
        [JsonIgnore]
        public readonly string componentName = "textinput";

        // textinput member-fields

        public enum OnType
        {
            [EnumMember(Value = "mousedown")]
            Mousedown,
            [EnumMember(Value = "mouseup")]
            Mouseup,
            [EnumMember(Value = "mouseenter")]
            Mouseenter,
            [EnumMember(Value = "mouseleave")]
            Mouseleave,
            [EnumMember(Value = "triggerdown")]
            Triggerdown,
            [EnumMember(Value = "triggerup")]
            Triggerup,
            [EnumMember(Value = "gripdown")]
            Gripdown,
            [EnumMember(Value = "gripup")]
            Gripup,
            [EnumMember(Value = "menudown")]
            Menudown,
            [EnumMember(Value = "menuup")]
            Menuup,
            [EnumMember(Value = "systemdown")]
            Systemdown,
            [EnumMember(Value = "systemup")]
            Systemup,
            [EnumMember(Value = "trackpaddown")]
            Trackpaddown,
            [EnumMember(Value = "trackpadup")]
            Trackpadup,
        }
        private static OnType defOn = OnType.Mousedown;
        [JsonConverter(typeof(StringEnumConverter))]
        [JsonProperty(PropertyName = "on")]
        [Tooltip("A case-sensitive string representing the event type to listen for, e.g. 'mousedown', 'mouseup'. See https://developer.mozilla.org/en-US/docs/Web/Events")]
        public OnType On = defOn;
        public bool ShouldSerializeOn()
        {
            // on
            return (On != defOn);
        }

        private static string defTitle = "Text Input";
        [JsonProperty(PropertyName = "title")]
        [Tooltip("The prompt title")]
        public string Title = defTitle;
        public bool ShouldSerializeTitle()
        {
            // title
            return (Title != defTitle);
        }

        private static string defLabel = "Input text below (max is 140 characters)";
        [JsonProperty(PropertyName = "label")]
        [Tooltip("Text prompt label")]
        public string Label = defLabel;
        public bool ShouldSerializeLabel()
        {
            // label
            return (Label != defLabel);
        }

        private static string defPlaceholder = "Type here";
        [JsonProperty(PropertyName = "placeholder")]
        [Tooltip("Text input place holder")]
        public string Placeholder = defPlaceholder;
        public bool ShouldSerializePlaceholder()
        {
            // placeholder
            return (Placeholder != defPlaceholder);
        }

        // General json object management
        [OnError]
        internal void OnError(StreamingContext context, ErrorContext errorContext)
        {
            Debug.LogWarning($"{errorContext.Error.Message}: {errorContext.OriginalObject}");
            errorContext.Handled = true;
        }

        [JsonExtensionData]
        private IDictionary<string, JToken> _additionalData;
    }
}
