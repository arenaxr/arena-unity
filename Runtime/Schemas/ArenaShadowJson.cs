/**
 * Open source software under the terms in /LICENSE
 * Copyright (c) 2021-2023, Carnegie Mellon University. All rights reserved.
 */

// CAUTION: This file is autogenerated from https://github.com/arenaxr/arena-schemas. Changes made here may be overwritten.

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json.Serialization;
using UnityEngine;

namespace ArenaUnity.Schemas
{
    /// <summary>
    /// Shadow
    /// </summary>
    [Serializable]
    public class ArenaShadowJson
    {
        [JsonIgnore]
        public readonly string componentName = "shadow";

        // shadow member-fields

        private static bool defCast = false;
        [JsonProperty(PropertyName = "cast")]
        [Tooltip("Whether the entity casts shadows onto the surrounding scene")]
        public bool Cast = defCast;
        public bool ShouldSerializeCast()
        {
            // cast
            return (Cast != defCast);
        }

        private static bool defReceive = false;
        [JsonProperty(PropertyName = "receive")]
        [Tooltip("Whether the entity receives shadows from the surrounding scene")]
        public bool Receive = defReceive;
        public bool ShouldSerializeReceive()
        {
            // receive
            return (Receive != defReceive);
        }

        // General json object management
        [OnError]
        internal void OnError(StreamingContext context, ErrorContext errorContext)
        {
            Debug.LogWarning($"{errorContext.Error.Message}: {errorContext.OriginalObject}");
            errorContext.Handled = true;
        }

        [JsonExtensionData]
        private IDictionary<string, JToken> _additionalData;
    }
}
